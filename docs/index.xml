<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>libra blog</title>
    <link>https://longxiaofei.github.io/</link>
    <description>Recent content on libra blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Mar 2022 15:36:13 +0800</lastBuildDate><atom:link href="https://longxiaofei.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>简单了解一下列式存储</title>
      <link>https://longxiaofei.github.io/post/%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B%E5%88%97%E5%BC%8F%E5%AD%98%E5%82%A8/</link>
      <pubDate>Tue, 22 Mar 2022 15:36:13 +0800</pubDate>
      
      <guid>https://longxiaofei.github.io/post/%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B%E5%88%97%E5%BC%8F%E5%AD%98%E5%82%A8/</guid>
      <description>就当抄书了，还是不好好抄书的那种。 什么是列式存储? 在我们经常接触的OLTP数据库(如Mysql、Mongodb)，大多是使用行结构进行存储数</description>
    </item>
    
    <item>
      <title>随便写写</title>
      <link>https://longxiaofei.github.io/post/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/</link>
      <pubDate>Thu, 03 Feb 2022 23:14:24 +0800</pubDate>
      
      <guid>https://longxiaofei.github.io/post/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/</guid>
      <description>11天的春节小假期快要结束了，想起来&amp;quot;坚持写东西&amp;quot;这个事情，那就搞个年终总结吧。 来到杭州一年了，买了房，装了修，21年年</description>
    </item>
    
    <item>
      <title>Elasticsearch的查询原理(下)</title>
      <link>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8E%9F%E7%90%86%E4%B8%8B/</link>
      <pubDate>Sat, 06 Nov 2021 18:06:11 +0800</pubDate>
      
      <guid>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8E%9F%E7%90%86%E4%B8%8B/</guid>
      <description>多分片查询 es查询分为两个阶段&amp;quot;query&amp;quot;和&amp;quot;fetch&amp;quot;，称为&amp;quot;query then fetch</description>
    </item>
    
    <item>
      <title>Elasticsearch的查询原理(中)</title>
      <link>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8E%9F%E7%90%86%E4%B8%AD/</link>
      <pubDate>Sun, 31 Oct 2021 16:06:11 +0800</pubDate>
      
      <guid>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8E%9F%E7%90%86%E4%B8%AD/</guid>
      <description>BKD Tree范围查询 BKD树是BSP(Binary space partitioning)树家族中的一员，大部分BSP树常用于图像渲染等业务中，也有部分B</description>
    </item>
    
    <item>
      <title>Elasticsearch的查询原理(上)</title>
      <link>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8E%9F%E7%90%86%E4%B8%8A/</link>
      <pubDate>Wed, 27 Oct 2021 22:00:14 +0800</pubDate>
      
      <guid>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E5%8E%9F%E7%90%86%E4%B8%8A/</guid>
      <description>粗略整理了一下Elasticsearch查询的原理, 这一篇主要是关于Elasticsearch单分片查询的原理, 由于Elasticsearc</description>
    </item>
    
    <item>
      <title>Elasticsearch的写入流程</title>
      <link>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Tue, 05 Oct 2021 08:50:14 +0800</pubDate>
      
      <guid>https://longxiaofei.github.io/post/elasticsearch%E7%9A%84%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</guid>
      <description>粗略整理了一下Elasticsearch写入数据的流程, 有不对的地方希望指正, 下面Elasticsearch简称为es。 提出的问题 es数据写</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://longxiaofei.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://longxiaofei.github.io/about/</guid>
      <description>关于我 Pythonista, 全栈工程师(什么都会点皮毛), 半吊子数据工程师 社恐症患者, 曾今的中二少年, 迷茫的社会青年 山东汉子, 在北京待了三年, 现定居杭州 之前在V</description>
    </item>
    
  </channel>
</rss>
